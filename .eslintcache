[{"/home/daniyar/Рабочий стол/volevents-app/src/index.js":"1","/home/daniyar/Рабочий стол/volevents-app/src/App.js":"2","/home/daniyar/Рабочий стол/volevents-app/src/serviceWorker.js":"3","/home/daniyar/Рабочий стол/volevents-app/src/Login.js":"4","/home/daniyar/Рабочий стол/volevents-app/src/SignUp.js":"5","/home/daniyar/Рабочий стол/volevents-app/src/ListProjects.js":"6","/home/daniyar/Рабочий стол/volevents-app/src/Profile.js":"7","/home/daniyar/Рабочий стол/volevents-app/src/AddProject.js":"8","/home/daniyar/Рабочий стол/volevents-app/src/EditProject.js":"9","/home/daniyar/Рабочий стол/volevents-app/src/EditProfile.js":"10","/home/daniyar/Рабочий стол/volevents-app/src/ProjectPage.js":"11","/home/daniyar/Рабочий стол/volevents-app/src/EditUserEmail.js":"12","/home/daniyar/Рабочий стол/volevents-app/src/EditUserPassword.js":"13","/home/daniyar/Рабочий стол/volevents-app/src/PrivateRoute.js":"14","/home/daniyar/Рабочий стол/volevents-app/src/Auth.js":"15","/home/daniyar/Рабочий стол/volevents-app/src/base.js":"16","/home/daniyar/Рабочий стол/volevents-app/src/Sidebar.js":"17"},{"size":248,"mtime":1608918019018,"results":"18","hashOfConfig":"19"},{"size":1566,"mtime":1608918028834,"results":"20","hashOfConfig":"19"},{"size":4375,"mtime":1608917987201,"results":"21","hashOfConfig":"19"},{"size":1829,"mtime":1608836807953,"results":"22","hashOfConfig":"19"},{"size":3213,"mtime":1608124189843,"results":"23","hashOfConfig":"19"},{"size":3480,"mtime":1608917417294,"results":"24","hashOfConfig":"19"},{"size":3652,"mtime":1608918000441,"results":"25","hashOfConfig":"19"},{"size":7502,"mtime":1608917873931,"results":"26","hashOfConfig":"19"},{"size":7150,"mtime":1608917385765,"results":"27","hashOfConfig":"19"},{"size":3529,"mtime":1608917600976,"results":"28","hashOfConfig":"19"},{"size":6827,"mtime":1608917403809,"results":"29","hashOfConfig":"19"},{"size":4365,"mtime":1608802131103,"results":"30","hashOfConfig":"19"},{"size":4449,"mtime":1608801966155,"results":"31","hashOfConfig":"19"},{"size":511,"mtime":1604484348000,"results":"32","hashOfConfig":"19"},{"size":600,"mtime":1607135799755,"results":"33","hashOfConfig":"19"},{"size":496,"mtime":1607588370969,"results":"34","hashOfConfig":"19"},{"size":2442,"mtime":1608916303824,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11q2o9k",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},"/home/daniyar/Рабочий стол/volevents-app/src/index.js",[],"/home/daniyar/Рабочий стол/volevents-app/src/App.js",[],"/home/daniyar/Рабочий стол/volevents-app/src/serviceWorker.js",[],"/home/daniyar/Рабочий стол/volevents-app/src/Login.js",[],["79","80"],"/home/daniyar/Рабочий стол/volevents-app/src/SignUp.js",["81","82","83","84","85","86","87"],"import React, { useCallback, useState, useContext } from \"react\"; \nimport { withRouter, Redirect } from \"react-router\";\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from \"./Auth.js\";\nimport app from \"./base\";\nimport \"./SignUp.css\";\n\nconst SignUp = ({ history }) => {\n\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const ref = app.firestore().collection(\"users\");\n  \n\n  function addUserToDb(user) {\n    ref\n      .doc(user.id)\n      .set(user)\n      .then(() => {\n        setUser((prev) => [user, ...prev]);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n\n      \n      \n  }\n\n  const handleSignUp = useCallback(async event => {\n    event.preventDefault();\n    const { firstname, lastname, email, password } = event.target.elements;    \n    try {\n      await app\n        .auth()\n        .createUserWithEmailAndPassword(email.value, password.value).then((userRecord) => {\n  \n          let uid = app.auth().currentUser.uid;\n    \n          return app.firestore().collection('users').doc(uid)\n            .set({\n              user_uid: uid,\n              firstname: firstname.value,\n              lastname: lastname.value,\n              email: email.value\n            })\n    \n        })\n      history.push(\"/list_projects\");\n\n\n\n    } catch (error) {\n      alert(error);\n    }\n    \n  }, [history]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    ref.add({email})\n    .then(() => {\n      setEmail('')    \n    })\n  }\n\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <>\n      <main>\n        <div class=\"section-register\">\n          <h2 class=\"main-title\">Регистрация</h2>\n          <hr />\n          <div class=\"main-form\">\n            <form onSubmit={handleSignUp}>\n            <div class=\"group\">\n                <span class=\"group-label\">Имя</span>\n                <input class=\"group-form\" type=\"text\" placeholder=\"John\" name=\"firstname\" />\n              </div>\n              <div class=\"group\">\n                <span class=\"group-label\">Фамилие</span>\n                <input class=\"group-form\" type=\"text\" placeholder=\"Mask\" name=\"lastname\" />\n              </div>\n              <div class=\"group\">\n                <span class=\"group-label\">Email</span>\n                <input class=\"group-form\" type=\"email\" placeholder=\"example@gmail.com\" name=\"email\" />\n              </div>\n              <div class=\"group\">\n                <span class=\"group-label\">Пароль</span>\n                <input class=\"group-form\" type=\"password\" placeholder=\"************\" name=\"password\" />\n              </div>\n              <button type=\"submit\" class=\"button-submit\">Регистрация</button>\n            </form>\n            \n            <hr />\n            <h2 class=\"main-form-subtitle\">У вас есть аккаунт?</h2>\n            <Link to=\"/login\"><button class=\"main-form-register\">Авторизоваться</button></Link>\n          </div>\n        </div>\n      </main>\n    </>\n  );\n};\n\n\nexport default withRouter(SignUp);\n","/home/daniyar/Рабочий стол/volevents-app/src/ListProjects.js",["88","89","90","91"],"import React, {useState, useEffect, Component} from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\nimport app from \"./base\";\r\nimport './ListProjects.scss';\r\nimport Sidebar from './Sidebar';\r\nimport './DefaultStyles.css';\r\n\r\nconst ListProjects = () => {\r\n\r\n    const [projects, setProjects] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const ref = app.firestore().collection('projects');\r\n\r\n    function getProjects() {\r\n        setLoading(true);\r\n        ref.onSnapshot((querySnapshot) => {\r\n            const items = [];\r\n            querySnapshot.forEach((doc) => {\r\n                items.push(doc.data());\r\n            });\r\n            setProjects(items);\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n  \r\n    useEffect(() => {\r\n        getProjects();\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>\r\n    }\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <Sidebar />\r\n            <main>\r\n                <div className=\"section-list-projects\">\r\n                    <div className=\"list__group-text\">\r\n                        <h2 className=\"list__title\">Мероприятия</h2>\r\n                        <Link class=\"link-reset-style\" to=\"add_project\"><button class=\"button-green list__button\">Добавить проект</button></Link>\r\n                    </div>\r\n                    \r\n                    <div class=\"cards-list\">\r\n                        {projects.map((project) => (\r\n                        <Link class=\"link-block card-event\" key={project.project_id} to={`/project_page?id=${project.project_id}`}>\r\n                            <div class=\"card-header\">\r\n                                <div class=\"card-row__block\">\r\n                                    <img src={require('./images/Card image/default-image.svg').default} alt=\"\" class=\"card-img\" />\r\n                                </div>\r\n                                <div class=\"card-row__block\">\r\n                                    <h2 class=\"card-title\">{project.title_project.length > 40 ? project.title_project.substring(0, 40) + \"...\" : project.title_project }</h2>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card-main\">\r\n                                <div class=\"card-main-group\">\r\n                                    <div class=\"card-row__block\">\r\n                                        <img src={require('./images/Card image/map.svg').default} alt=\"\" />\r\n                                        <span class=\"card-subtext\">{project.geolocation}</span>\r\n                                    </div>\r\n                                    <div class=\"card-row__block\">\r\n                                        <img src={require('./images/Card image/time.svg').default} alt=\"\" />\r\n                                        <span class=\"card-subtext\">{project.date} / {project.time}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <p class=\"card-description\">{ project.description_project.length > 200 ? project.description_project.substring(0, 200) + \"...\" : project.description_project }</p>  \r\n                            </div>\r\n                        </Link>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ListProjects;","/home/daniyar/Рабочий стол/volevents-app/src/Profile.js",["92","93","94","95","96","97","98","99","100","101"],"/home/daniyar/Рабочий стол/volevents-app/src/AddProject.js",["102","103","104","105"],"/home/daniyar/Рабочий стол/volevents-app/src/EditProject.js",["106","107","108","109","110","111"],"import React, { useState, useCallback } from 'react';\r\nimport app from \"./base.js\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport './DefaultStyles.css';\r\nimport Sidebar from './Sidebar';\r\nimport './EditProject.scss';\r\n\r\n\r\nconst EditProject = ({history}) => {\r\n\r\n\r\n    const db = app.firestore();\r\n\r\n    const project_id = window.location.search.replace('?id=', '').toString();\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [geolocation, setGeolocation] = useState('');\r\n    const [foodRadio, setFoodRadio] = useState('');\r\n    const [transportRadio, setTransportRadio] = useState('');\r\n    const [equipmentRadio, setEquipmentRadio] = useState('');\r\n    \r\n   \r\n  \r\n\r\n    const handleEditProject = useCallback(async event => {\r\n        event.preventDefault();\r\n        const { title, description } = event.target.elements;\r\n\r\n        try {\r\n            return db.collection('projects').doc(project_id).\r\n            update({ \r\n                title_project: title.value,\r\n                description_project: description.value\r\n            });\r\n            \r\n\r\n        } catch (error) {\r\n            alert(error)\r\n        } finally {\r\n            \r\n            history.push(\"/\");\r\n        }\r\n\r\n      \r\n\r\n\r\n    }, [history]); \r\n\r\n \r\n\r\n    return (\r\n        <>\r\n          \r\n           <Sidebar />\r\n\r\n            <main>\r\n                <div className=\"section-edit-project\">\r\n                    <h2 className=\"section-title\">Изменение мероприятия</h2>\r\n                    <div className=\"section-block\">\r\n                        <form onSubmit={handleEditProject} className=\"main-form\">\r\n                            <div className=\"group\">\r\n                                <span class=\"group-label\">Название</span>\r\n                                <input type=\"text\" class=\"group-form\" name=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\r\n                            </div>\r\n                            <div className=\"group\">\r\n                                <span class=\"group-label\">Дата начала</span>\r\n                                <input type=\"text\" class=\"group-form\" name=\"date\" value={date} onChange={(e) => setDate(e.target.value)} required />\r\n                            </div>\r\n                            <div className=\"group\">\r\n                                <span class=\"group-label\">Время начала</span>\r\n                                <input type=\"text\" class=\"group-form\" name=\"time\" value={time} onChange={(e) => setTime(e.target.value)} required />\r\n                            </div>\r\n                            <div className=\"group\">\r\n                                <span class=\"group-label\">Место проведения</span>\r\n                                <input type=\"text\" class=\"group-form\" name=\"geolocation\" value={geolocation} onChange={(e) => setGeolocation(e.target.value)} required />\r\n                            </div>\r\n                            <div className=\"group\">\r\n                                <span class=\"group__subtitle\">Бесплатная еда</span>\r\n                                <div className=\"group-radio\">\r\n                                    <div className=\"radio\">\r\n                                        <input className=\"radio__input\" type=\"radio\" name=\"foodRadio\" value={\"Yes\"} onChange={(e) => setFoodRadio(e.target.value)} id=\"radio1\" />\r\n                                        <span className=\"radio__text\">Да</span>\r\n                                    </div>\r\n                                    <div className=\"radio\">\r\n                                        <input className=\"radio__input\" type=\"radio\" name=\"foodRadio\" value={\"No\"} onChange={(e) => setFoodRadio(e.target.value)} id=\"radio2\" />\r\n                                        <span className=\"radio__text\">Нет</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"group\">\r\n                                <span class=\"group__subtitle\">Бесплатная развозка</span>\r\n                                <div className=\"group-radio\">\r\n                                    <div className=\"radio\">\r\n                                        <input className=\"radio__input\" type=\"radio\" name=\"transportRadio\" value={\"Yes\"} onChange={(e) => setTransportRadio(e.target.value)} id=\"radio1\" />\r\n                                        <span className=\"radio__text\">Да</span>\r\n                                    </div>\r\n                                    <div className=\"radio\">\r\n                                        <input className=\"radio__input\" type=\"radio\" name=\"transportRadio\" value={\"No\"} onChange={(e) => setTransportRadio(e.target.value)} id=\"radio2\" />\r\n                                        <span className=\"radio__text\">Нет</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"group\">\r\n                                <span class=\"group__subtitle\">Бесплатное оборудование</span>\r\n                                <div className=\"group-radio\">\r\n                                    <div className=\"radio\">\r\n                                        <input className=\"radio__input\" type=\"radio\" name=\"equipmentRadio\" value={\"Yes\"} onChange={(e) => setEquipmentRadio(e.target.value)} id=\"radio1\" />\r\n                                        <span className=\"radio__text\">Да</span>\r\n                                    </div>\r\n                                    <div className=\"radio\">\r\n                                        <input className=\"radio__input\" type=\"radio\" name=\"equipmentRadio\" value={\"No\"} onChange={(e) => setEquipmentRadio(e.target.value)} id=\"radio2\" />\r\n                                        <span className=\"radio__text\">Нет</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"group\">\r\n                                <span className=\"group-label\">Описание мероприятия</span>\r\n                                <textarea type=\"text\" className=\"group-form label-description\" name=\"description\" maxLength=\"1000\" value={description} onChange={(e) => setDescription(e.target.value)} required></textarea>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"edit-project__button-create\">Изменить</button>\r\n                        </form>\r\n                    </div>\r\n                    <Link to=\"/\" className=\"edit-project__button-cancel\"><span>Отмена</span></Link>\r\n                </div>\r\n            </main>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(EditProject);\r\n\r\n\r\n","/home/daniyar/Рабочий стол/volevents-app/src/EditProfile.js",["112","113","114","115","116"],"import React, { useState, useCallback } from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\nimport Sidebar from './Sidebar';\r\nimport app from \"./base.js\";\r\nimport './EditProfile.scss';\r\n\r\n\r\nconst EditProfile = ({history}) => {\r\n\r\n    \r\n    const db = app.firestore();\r\n\r\n    const profile_id = window.location.search.replace('?id=', '').toString();\r\n    const [firstname, setFirstname] = useState('');\r\n    const [lastname, setLastname] = useState('');\r\n    \r\n   \r\n    const handleEditProfile = useCallback(async event => {\r\n        event.preventDefault();\r\n        const { firstname, lastname } = event.target.elements;\r\n\r\n        try {\r\n            return db.collection('users').doc(profile_id).\r\n            update({ \r\n                firstname: firstname.value,\r\n                lastname: lastname.value\r\n            });\r\n        } catch (error) {\r\n            alert(error)\r\n        } finally {\r\n            \r\n            history.push(\"/\");\r\n        }\r\n    }, [history]); \r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Sidebar />\r\n\r\n            <main>\r\n                <div className=\"section-edit-profile\">\r\n                    <div className=\"header-edit-profile\">\r\n                        <div className=\"header-edit-profile-items\">\r\n                            <img src={require(\"./images/EditProfile/edit-profile-icon.svg\").default} alt=\"img-header\" className=\"header-edit-profile-image\" />\r\n                            <h4 className=\"header-title\">Изменение основных данных</h4>\r\n                        </div>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"section-body\">\r\n                        <img className=\"edit-profile-image\" src={require('./images/EditProfile/edit-profile-img.svg').default} alt=\"profile image\" className=\"edit-profile-image\" />\r\n                        <div className=\"block-edit-profile\">\r\n                            <form onSubmit={handleEditProfile} className=\"edit__form-block\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"firstname\"\r\n                                    className=\"edit__new-profile input\"\r\n                                    value={firstname}\r\n                                    onChange={(e) => setFirstname(e.target.value)}\r\n                                    placeholder=\"Имя\" />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"lastname\"\r\n                                    className=\"edit__password input\"\r\n                                    value={lastname}\r\n                                    onChange={(e) => setLastname(e.target.value)}\r\n                                    placeholder=\"Фамилие\" />\r\n\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"edit__button-edit\">\r\n                                    Изменить\r\n                                </button>\r\n                            </form>\r\n                            <Link to=\"./profile\" className=\"edit__button-cancel\">\r\n                                Отмена\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(EditProfile);","/home/daniyar/Рабочий стол/volevents-app/src/ProjectPage.js",["117","118","119","120","121","122","123","124","125","126"],"import React, {useState, useEffect} from 'react';\r\nimport app from './base.js';\r\nimport { Link } from 'react-router-dom';\r\nimport Sidebar from './Sidebar';\r\nimport './ProjectPage.scss';\r\nimport './DefaultStyles.css';\r\n\r\nconst ProjectPage = () => {\r\n\r\n    const project_id = window.location.search.replace('?id=', '').toString();\r\n    \r\n\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [time, setTime] = useState('');\r\n    const [geolocation, setGeolocation] = useState('');\r\n    const [foodRadio, setFoodRadio] = useState('');\r\n    const [transportRadio, setTransportRadio] = useState('');\r\n    const [equipmentRadio, setEquipmentRadio] = useState('');\r\n    const [projectCreator, setProjectCreator] = useState('');\r\n    const button = document.querySelector('.main-button-edit');\r\n    \r\n    const getUserData = async () => {\r\n        try {\r\n            app.firestore().collection(\"projects\")\r\n            .doc(project_id)\r\n            .get()\r\n            .then(doc => {\r\n                setTitle(doc.get(\"title_project\"));\r\n                setDescription(doc.get(\"description_project\"));\r\n                setDate(doc.get(\"date\"));\r\n                setTime(doc.get(\"time\"));\r\n                setGeolocation(doc.get(\"geolocation\"));\r\n                setFoodRadio(doc.get(\"food\"));\r\n                setTransportRadio(doc.get(\"transport\"));\r\n                setEquipmentRadio(doc.get(\"equipment\"));\r\n                setProjectCreator(doc.get(\"userId\"));\r\n            });\r\n            \r\n\r\n        } catch (error) {\r\n            alert(error)\r\n        } \r\n    }\r\n\r\n    useEffect(() => {\r\n        getUserData();\r\n    }, []);\r\n\r\n    const userId = app.auth().currentUser.uid;\r\n\r\n    if (userId == projectCreator) {\r\n        console.log(true);\r\n    } else {\r\n        console.log(false);\r\n    }\r\n\r\n\r\n    const deleteProject = () => {\r\n        try {\r\n            app.firestore().collection('projects').doc(project_id).delete();\r\n            alert('Successed')\r\n        } catch (e) {\r\n            alert(e)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n        <Sidebar />\r\n\r\n        <main>\r\n        <div class=\"section-event-info\">\r\n            <h1 class=\"event-info__title\">Помощь в Ботаническом саду</h1>\r\n            <div class=\"event-info__row\">\r\n                <div class=\"row-block\"><img src={require(\"./images/ProjectPage/geolocation.svg\").default} alt=\"Геолокация\" /><span>Ботанический сад</span></div>\r\n                <div class=\"row-block\"><img src={require(\"./images/ProjectPage/calendar.svg\").default} alt=\"Дата\" /><span>Дата события: 24.12.2020</span></div>\r\n                <div class=\"row-block\"><img src={require(\"./images/ProjectPage/time.svg\").default} alt=\"События\" /><span>Время начала: 12.00</span></div>\r\n            </div>\r\n          \r\n\r\n\r\n            <div class=\"tabs-body\">\r\n\r\n                <div class=\"tabs__block event-info__description\" id=\"description\">\r\n                    <h2 class=\"description__title\">Описание</h2>\r\n                    <p class=\"description__text\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Excepturi ab incidunt asperiores ipsa corrupti nam minima laudantium fugiat laborum sint illum temporibus saepe autem dolor, aspernatur culpa, aliquid reiciendis iusto voluptate aperiam animi nihil. Minima accusamus quibusdam obcaecati placeat impedit asperiores aliquam natus ut excepturi, nam cupiditate nemo, eum atque. Ducimus velit itaque deleniti. Alias iste obcaecati quaerat cumque sunt eos nihil sint error expedita laudantium, sit vel impedit perspiciatis iure, explicabo perferendis harum exercitationem, tenetur quis ullam hic corrupti temporibus quod. Nihil quia accusantium ipsum odio deserunt officiis esse dolores iure tempore dignissimos itaque magnam nulla, cum nisi cupiditate, iusto, atque aspernatur odit rem pariatur id? Recusandae ad, voluptas quos iste voluptatibus aliquam deserunt illum eaque error soluta enim alias odit nisi excepturi, nemo veniam amet accusantium tenetur, id explicabo repudiandae quasi dignissimos hic corrupti. Ut vel assumenda, non, natus esse quod nihil vero facere aliquid, obcaecati reprehenderit distinctio eos earum beatae molestias saepe cumque unde et! Eum corporis veritatis repellendus aliquid est aut vero dolores nobis natus voluptate quibusdam enim, expedita officia nesciunt, obcaecati laudantium perspiciatis unde hic commodi voluptates. Animi beatae quas eos, labore enim perferendis assumenda nulla facilis sequi mollitia commodi temporibus inventore in consectetur voluptates.</p>\r\n                </div>\r\n                  \r\n                <div class=\"tabs__block event-info__others\" id=\"other\">\r\n                    <h2 class=\"others__title\">Другое:</h2>\r\n                    <div class=\"others-block\">\r\n                        <div class=\"others-row\"><img src={require(\"./images/ProjectPage/food.svg\").default} alt=\"Еда\"/><span>Бесплатная еда: Да</span></div>\r\n                        <div class=\"others-row\"><img src={require(\"./images/ProjectPage/transport.svg\").default} alt=\"Транспорт\"/><span>Бесплатная развозка: Нет</span></div>\r\n                        <div class=\"others-row\"><img src={require(\"./images/ProjectPage/equipment.svg\").default} alt=\"Экипировка\"/><span>Бесплатная экипировка: Нет</span></div>\r\n                    </div>\r\n                </div>\r\n                  \r\n                <div class=\"tabs__block event-info__contacts\" id=\"contacts\">\r\n                    <h2 class=\"contacts__title\">Контакты</h2>\r\n                    <div class=\"contacts-block\">\r\n                        <div class=\"contacts-row\">\r\n                            <button class=\"contacts__button\">example@gmail.com</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"tabs__block event-info__control\" id=\"control\">\r\n                    <h2 class=\"control__title\">Управление</h2>\r\n                    <div class=\"control-block\">\r\n                        <div class=\"control-row\">\r\n                            <Link to={`/edit_project?id=${project_id}`} class=\"control__button\">Изменить проект</Link>\r\n                        </div>\r\n                        <div class=\"control-row\">\r\n                            <button onClick={deleteProject} class=\"control__button\">Удалить проект</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    </main>\r\n\r\n        </>\r\n    )\r\n    \r\n\r\n}\r\n\r\nexport default ProjectPage;","/home/daniyar/Рабочий стол/volevents-app/src/EditUserEmail.js",["127","128","129","130"],"import React, { useState, useCallback } from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\nimport app from './base.js';\r\nimport Sidebar from './Sidebar';\r\n\r\nimport './EditUserEmail.scss';\r\n\r\nconst EditUserEmail = ({history}) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const email_user = app.auth().currentUser.email;\r\n    const user_id = app.auth().currentUser.uid;\r\n\r\n    const handleEditUserEmail = useCallback(async event => {\r\n        event.preventDefault();\r\n\r\n        const { email, password } = event.target.elements;\r\n\r\n        try {\r\n            app.auth().signInWithEmailAndPassword(email_user, password.value)\r\n            .then(function(userCredential) {\r\n                userCredential.user.updateEmail(email.value)\r\n            });\r\n\r\n            app.firestore().collection('users').doc(user_id).update({ \r\n                email: email.value,\r\n            });\r\n\r\n            history.push('./profile')\r\n\r\n        } catch(error) {\r\n            alert(error);\r\n        } finally {\r\n        }\r\n\r\n\r\n    },[history]);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Sidebar />\r\n\r\n            <main>\r\n                <div className=\"section-edit-email\">\r\n                    <div className=\"header-edit-email\">\r\n                        <div className=\"header-edit-email-items\">\r\n                            <img src={require(\"./images/EditUserEmail/edit-email-header-image.svg\").default} alt=\"img-header\" className=\"header-edit-email-image\"/>\r\n                            <h4 className=\"header-title\">Изменение почты</h4>\r\n                        </div>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"section-body\">\r\n                        <img className=\"edit-email-image\" src={require('./images/EditUserEmail/edit-email-image.svg').default} alt=\"email image\" className=\"edit-email-image\"/>\r\n                        <div className=\"block-edit-email\">\r\n                            <form onSubmit={handleEditUserEmail} className=\"edit__form-block\">\r\n                                <input \r\n                                    type=\"email\" \r\n                                    name=\"email\"  \r\n                                    className=\"edit__new-email input\" \r\n                                    value={email} \r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    placeholder=\"Новый e-mail\" />\r\n                                <input \r\n                                    type=\"password\" \r\n                                    name=\"password\"  \r\n                                    className=\"edit__password input\" \r\n                                    value={password} \r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                    placeholder=\"Ваш текущий Пароль\" />\r\n\r\n                                <button \r\n                                    type=\"submit\"\r\n                                    className=\"edit__button-edit\">\r\n                                    Изменить\r\n                                </button>\r\n                            </form>\r\n                            <Link to=\"./profile\" className=\"edit__button-cancel\">\r\n                                Отмена\r\n                            </Link>\r\n                        </div>  \r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\n/* <h2>Edit Email</h2>\r\n            <form onSubmit={handleEditUserEmail}>\r\n                <input \r\n                    type=\"email\" \r\n                    name=\"email\" \r\n                    placeholder=\"Enter email\" \r\n                    value={email} \r\n                    onChange={(e) => setEmail(e.target.value)}/>\r\n                <input \r\n                    type=\"password\" \r\n                    name=\"password\" \r\n                    placeholder=\"*******\" \r\n                    value={password} \r\n                    onChange={(e) => setPassword(e.target.value)}/>\r\n                <button type=\"submit\">Edit Email</button>\r\n            </form>\r\n            <Link to=\"./profile\"><button>Cancel</button></Link> */\r\n\r\nexport default withRouter(EditUserEmail);","/home/daniyar/Рабочий стол/volevents-app/src/EditUserPassword.js",["131","132","133","134","135"],"import React, { useState, useCallback } from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\nimport app from './base.js';\r\nimport Sidebar from './Sidebar';\r\nimport \"./EditUserPassword.scss\";\r\n\r\nconst EditUserPassword = ({history}) => {\r\n\r\n    const [current_password, setCurrentPassword] = useState('');\r\n    const [new_password, setNewPassword] = useState('');\r\n\r\n    const email_user = app.auth().currentUser.email;\r\n    const user_id = app.auth().currentUser.uid;\r\n\r\n    const handleEditUserEmail = useCallback(async event => {\r\n        event.preventDefault();\r\n\r\n        const { current_password, new_password } = event.target.elements;\r\n\r\n        try {\r\n            app.auth().signInWithEmailAndPassword(email_user, current_password.value)\r\n            .then(function(userCredential) {\r\n                userCredential.user.updatePassword(new_password.value)\r\n            });\r\n\r\n\r\n            history.push('/')\r\n\r\n        } catch(error) {\r\n            alert(error);\r\n        } finally {\r\n        }\r\n\r\n\r\n    },[history]);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Sidebar />\r\n\r\n            <main>\r\n                <div className=\"section-edit-password\">\r\n                    <div className=\"header-edit-password\">\r\n                        <div className=\"header-edit-password-items\">\r\n                            <img src={require(\"./images/EditUserPassword/edit-password-header-image.svg\").default} alt=\"img-header\" className=\"header-edit-password-image\"/>\r\n                            <h4 className=\"header-title\">Изменение пароля</h4>\r\n                        </div>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"section-body\">\r\n                        <img className=\"edit-password-image\" src={require('./images/EditUserPassword/edit-password-image.svg').default} alt=\"password image\" className=\"edit-password-image\"/>\r\n                        <div className=\"block-edit-password\">\r\n                            <form onSubmit={handleEditUserEmail} className=\"edit__form-block\">\r\n                                <input \r\n                                    type=\"password\" \r\n                                    name=\"current_password\"  \r\n                                    className=\"edit__new-password input\" \r\n                                    value={current_password} \r\n                                    onChange={(e) => setCurrentPassword(e.target.value)}\r\n                                    placeholder=\"Ваш текущий пароль\" />\r\n                                <input \r\n                                    type=\"password\" \r\n                                    name=\"new_password\"  \r\n                                    className=\"edit__password input\" \r\n                                    value={new_password} \r\n                                    onChange={(e) => setNewPassword(e.target.value)}\r\n                                    placeholder=\"Новый пароль\" />\r\n\r\n                                <button \r\n                                    type=\"submit\"\r\n                                    className=\"edit__button-edit\">\r\n                                    Изменить\r\n                                </button>\r\n                            </form>\r\n                            <Link to=\"/\" className=\"edit__button-cancel\">\r\n                                Отмена\r\n                            </Link>\r\n                        </div>  \r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(EditUserPassword);\r\n\r\n/* <h2>Edit Password</h2>\r\n            <form onSubmit={handleEditUserEmail}>\r\n                <input \r\n                    type=\"password\" \r\n                    name=\"current_password\" \r\n                    placeholder=\"Current password\" \r\n                    value={current_password} \r\n                    onChange={(e) => setCurrentPassword(e.target.value)}/>\r\n                <input \r\n                    type=\"password\" \r\n                    name=\"new_password\" \r\n                    placeholder=\"New password\" \r\n                    value={new_password} \r\n                    onChange={(e) => setNewPassword(e.target.value)}/>\r\n                <button type=\"submit\">Edit Password</button>\r\n            </form>\r\n            <Link to=\"./password\"><button>Cancel</button></Link> */","/home/daniyar/Рабочий стол/volevents-app/src/PrivateRoute.js",[],"/home/daniyar/Рабочий стол/volevents-app/src/Auth.js",[],"/home/daniyar/Рабочий стол/volevents-app/src/base.js",[],"/home/daniyar/Рабочий стол/volevents-app/src/Sidebar.js",["136","137","138","139"],"import React from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport './Sidebar.css';\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"logo\">\r\n              <a href=\"/\" className=\"nav-link\">\r\n               \r\n                <span className=\"link-text logo-text\">VolApp</span>\r\n                <svg\r\n                  aria-hidden=\"true\"\r\n                  focusable=\"false\"\r\n                  data-prefix=\"fad\"\r\n                  data-icon=\"angle-double-right\"\r\n                  role=\"img\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 448 512\"\r\n                  className=\"svg-inline--fa fa-angle-double-right fa-w-14 fa-5x\"\r\n                >\r\n                  <g className=\"fa-group\">\r\n                    <path\r\n                      fill=\"currentColor\"\r\n                      d=\"M224 273L88.37 409a23.78 23.78 0 0 1-33.8 0L32 386.36a23.94 23.94 0 0 1 0-33.89l96.13-96.37L32 159.73a23.94 23.94 0 0 1 0-33.89l22.44-22.79a23.78 23.78 0 0 1 33.8 0L223.88 239a23.94 23.94 0 0 1 .1 34z\"\r\n                      className=\"fa-secondary\"\r\n                    ></path>\r\n                    <path\r\n                      fill=\"currentColor\"\r\n                      d=\"M415.89 273L280.34 409a23.77 23.77 0 0 1-33.79 0L224 386.26a23.94 23.94 0 0 1 0-33.89L320.11 256l-96-96.47a23.94 23.94 0 0 1 0-33.89l22.52-22.59a23.77 23.77 0 0 1 33.79 0L416 239a24 24 0 0 1-.11 34z\"\r\n                      className=\"fa-primary\"\r\n                    ></path>\r\n                  </g>\r\n                </svg>\r\n                \r\n              </a>\r\n            </li>\r\n            <Link to=\"/list_projects\" className=\"nav-item\">\r\n                <a className=\"nav-link\">\r\n                    <img className=\"nav-icon\" src={require('./images/Sidebar/calendar.svg').default} alt=\"\" />\r\n                    <span className=\"link-text\">События</span>\r\n                </a>\r\n            </Link>\r\n            <Link to=\"/profile\" className=\"nav-item\">\r\n              <a href=\"#\" className=\"nav-link\">\r\n                <img className=\"nav-icon\" src={require('./images/Sidebar/user.svg').default} alt=\"\" />\r\n               <span className=\"link-text\">Профиль</span>\r\n              </a>\r\n            </Link>\r\n          </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;",{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":10,"column":10,"nodeType":"146","messageId":"147","endLine":10,"endColumn":19},{"ruleId":"144","severity":1,"message":"148","line":10,"column":21,"nodeType":"146","messageId":"147","endLine":10,"endColumn":33},{"ruleId":"144","severity":1,"message":"149","line":11,"column":10,"nodeType":"146","messageId":"147","endLine":11,"endColumn":18},{"ruleId":"144","severity":1,"message":"150","line":11,"column":20,"nodeType":"146","messageId":"147","endLine":11,"endColumn":31},{"ruleId":"144","severity":1,"message":"151","line":12,"column":10,"nodeType":"146","messageId":"147","endLine":12,"endColumn":14},{"ruleId":"144","severity":1,"message":"152","line":17,"column":12,"nodeType":"146","messageId":"147","endLine":17,"endColumn":23},{"ruleId":"144","severity":1,"message":"153","line":61,"column":9,"nodeType":"146","messageId":"147","endLine":61,"endColumn":17},{"ruleId":"144","severity":1,"message":"154","line":1,"column":37,"nodeType":"146","messageId":"147","endLine":1,"endColumn":46},{"ruleId":"144","severity":1,"message":"155","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":15},{"ruleId":"144","severity":1,"message":"156","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":20},{"ruleId":"157","severity":1,"message":"158","line":31,"column":8,"nodeType":"159","endLine":31,"endColumn":10,"suggestions":"160"},{"ruleId":"144","severity":1,"message":"161","line":1,"column":38,"nodeType":"146","messageId":"147","endLine":1,"endColumn":49},{"ruleId":"144","severity":1,"message":"155","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":15},{"ruleId":"144","severity":1,"message":"162","line":16,"column":11,"nodeType":"146","messageId":"147","endLine":16,"endColumn":16},{"ruleId":"157","severity":1,"message":"163","line":38,"column":8,"nodeType":"159","endLine":38,"endColumn":10,"suggestions":"164"},{"ruleId":"144","severity":1,"message":"165","line":45,"column":11,"nodeType":"146","messageId":"147","endLine":45,"endColumn":21},{"ruleId":"166","severity":1,"message":"167","line":73,"column":29,"nodeType":"168","endLine":73,"endColumn":135},{"ruleId":"166","severity":1,"message":"167","line":76,"column":29,"nodeType":"168","endLine":76,"endColumn":122},{"ruleId":"166","severity":1,"message":"167","line":80,"column":29,"nodeType":"168","endLine":80,"endColumn":125},{"ruleId":"166","severity":1,"message":"167","line":84,"column":29,"nodeType":"168","endLine":84,"endColumn":117},{"ruleId":"166","severity":1,"message":"167","line":89,"column":25,"nodeType":"168","endLine":89,"endColumn":92},{"ruleId":"144","severity":1,"message":"169","line":18,"column":12,"nodeType":"146","messageId":"147","endLine":18,"endColumn":21},{"ruleId":"144","severity":1,"message":"170","line":19,"column":12,"nodeType":"146","messageId":"147","endLine":19,"endColumn":26},{"ruleId":"144","severity":1,"message":"171","line":20,"column":12,"nodeType":"146","messageId":"147","endLine":20,"endColumn":26},{"ruleId":"157","severity":1,"message":"172","line":56,"column":8,"nodeType":"159","endLine":56,"endColumn":17,"suggestions":"173"},{"ruleId":"144","severity":1,"message":"174","line":5,"column":16,"nodeType":"146","messageId":"147","endLine":5,"endColumn":22},{"ruleId":"144","severity":1,"message":"169","line":22,"column":12,"nodeType":"146","messageId":"147","endLine":22,"endColumn":21},{"ruleId":"144","severity":1,"message":"170","line":23,"column":12,"nodeType":"146","messageId":"147","endLine":23,"endColumn":26},{"ruleId":"144","severity":1,"message":"171","line":24,"column":12,"nodeType":"146","messageId":"147","endLine":24,"endColumn":26},{"ruleId":"175","severity":1,"message":"176","line":34,"column":61,"nodeType":"177","messageId":"178","endLine":34,"endColumn":62,"fix":"179"},{"ruleId":"157","severity":1,"message":"180","line":51,"column":8,"nodeType":"159","endLine":51,"endColumn":17,"suggestions":"181"},{"ruleId":"144","severity":1,"message":"155","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":15},{"ruleId":"175","severity":1,"message":"176","line":24,"column":58,"nodeType":"177","messageId":"178","endLine":24,"endColumn":59,"fix":"182"},{"ruleId":"157","severity":1,"message":"183","line":35,"column":8,"nodeType":"159","endLine":35,"endColumn":17,"suggestions":"184"},{"ruleId":"185","severity":1,"message":"186","line":54,"column":25,"nodeType":"168","endLine":54,"endColumn":181},{"ruleId":"187","severity":1,"message":"188","line":54,"column":148,"nodeType":"189","endLine":54,"endColumn":178},{"ruleId":"144","severity":1,"message":"190","line":13,"column":12,"nodeType":"146","messageId":"147","endLine":13,"endColumn":17},{"ruleId":"144","severity":1,"message":"191","line":14,"column":12,"nodeType":"146","messageId":"147","endLine":14,"endColumn":23},{"ruleId":"144","severity":1,"message":"192","line":15,"column":12,"nodeType":"146","messageId":"147","endLine":15,"endColumn":16},{"ruleId":"144","severity":1,"message":"193","line":16,"column":12,"nodeType":"146","messageId":"147","endLine":16,"endColumn":16},{"ruleId":"144","severity":1,"message":"194","line":17,"column":12,"nodeType":"146","messageId":"147","endLine":17,"endColumn":23},{"ruleId":"144","severity":1,"message":"169","line":18,"column":12,"nodeType":"146","messageId":"147","endLine":18,"endColumn":21},{"ruleId":"144","severity":1,"message":"170","line":19,"column":12,"nodeType":"146","messageId":"147","endLine":19,"endColumn":26},{"ruleId":"144","severity":1,"message":"171","line":20,"column":12,"nodeType":"146","messageId":"147","endLine":20,"endColumn":26},{"ruleId":"157","severity":1,"message":"163","line":49,"column":8,"nodeType":"159","endLine":49,"endColumn":10,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":53,"column":16,"nodeType":"198","messageId":"199","endLine":53,"endColumn":18},{"ruleId":"144","severity":1,"message":"155","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":15},{"ruleId":"157","severity":1,"message":"200","line":39,"column":7,"nodeType":"159","endLine":39,"endColumn":16,"suggestions":"201"},{"ruleId":"185","severity":1,"message":"186","line":56,"column":25,"nodeType":"168","endLine":56,"endColumn":176},{"ruleId":"187","severity":1,"message":"188","line":56,"column":146,"nodeType":"189","endLine":56,"endColumn":174},{"ruleId":"144","severity":1,"message":"155","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":15},{"ruleId":"144","severity":1,"message":"202","line":14,"column":11,"nodeType":"146","messageId":"147","endLine":14,"endColumn":18},{"ruleId":"157","severity":1,"message":"203","line":36,"column":7,"nodeType":"159","endLine":36,"endColumn":16,"suggestions":"204"},{"ruleId":"185","severity":1,"message":"186","line":53,"column":25,"nodeType":"168","endLine":53,"endColumn":191},{"ruleId":"187","severity":1,"message":"188","line":53,"column":158,"nodeType":"189","endLine":53,"endColumn":189},{"ruleId":"144","severity":1,"message":"155","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":15},{"ruleId":"144","severity":1,"message":"205","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":16},{"ruleId":"206","severity":1,"message":"207","line":41,"column":17,"nodeType":"168","endLine":41,"endColumn":41},{"ruleId":"206","severity":1,"message":"208","line":47,"column":15,"nodeType":"168","endLine":47,"endColumn":48},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"no-unused-vars","'firstname' is assigned a value but never used.","Identifier","unusedVar","'setFirstname' is assigned a value but never used.","'lastname' is assigned a value but never used.","'setLastname' is assigned a value but never used.","'user' is assigned a value but never used.","'addUserToDb' is defined but never used.","'onSubmit' is assigned a value but never used.","'Component' is defined but never used.","'Route' is defined but never used.","'withRouter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProjects'. Either include it or remove the dependency array.","ArrayExpression",["211"],"'useCallback' is defined but never used.","'email' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.",["212"],"'deleteUser' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'foodRadio' is assigned a value but never used.","'transportRadio' is assigned a value but never used.","'equipmentRadio' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'userId'. Either include it or remove the dependency array.",["213"],"'uuidv4' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"214","text":"215"},"React Hook useCallback has missing dependencies: 'db' and 'project_id'. Either include them or remove the dependency array.",["216"],{"range":"217","text":"215"},"React Hook useCallback has missing dependencies: 'db' and 'profile_id'. Either include them or remove the dependency array.",["218"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'title' is assigned a value but never used.","'description' is assigned a value but never used.","'date' is assigned a value but never used.","'time' is assigned a value but never used.","'geolocation' is assigned a value but never used.",["219"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useCallback has missing dependencies: 'email_user' and 'user_id'. Either include them or remove the dependency array.",["220"],"'user_id' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'email_user'. Either include it or remove the dependency array.",["221"],"'ReactDOM' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},[1138,1153],"\r\n            .",{"desc":"228","fix":"229"},[752,767],{"desc":"230","fix":"231"},{"desc":"224","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},"Update the dependencies array to be: [getProjects]",{"range":"237","text":"238"},"Update the dependencies array to be: [getUserData]",{"range":"239","text":"240"},"Update the dependencies array to be: [history, userId]",{"range":"241","text":"242"},"Update the dependencies array to be: [db, history, project_id]",{"range":"243","text":"244"},"Update the dependencies array to be: [db, history, profile_id]",{"range":"245","text":"246"},{"range":"247","text":"240"},"Update the dependencies array to be: [email_user, history, user_id]",{"range":"248","text":"249"},"Update the dependencies array to be: [email_user, history]",{"range":"250","text":"251"},[857,859],"[getProjects]",[1072,1074],"[getUserData]",[1804,1813],"[history, userId]",[1450,1459],"[db, history, project_id]",[1020,1029],"[db, history, profile_id]",[1721,1723],[1135,1144],"[email_user, history, user_id]",[1068,1077],"[email_user, history]"]